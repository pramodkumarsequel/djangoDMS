# Generated by Django 4.0.4 on 2022-10-11 22:34

import account.manager
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gst_field.modelfields
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('userid', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('isauth', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('last_logout_time', models.DateTimeField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('object', account.manager.UserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CityMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('City_Name', models.CharField(max_length=50, verbose_name='City Name')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_Code', models.CharField(max_length=20, unique=True, verbose_name='Retailer Code')),
                ('Customer_Group', models.CharField(blank=True, choices=[('Distributor', 'Distributor'), ('Retailer', 'Retailer')], max_length=50, null=True, verbose_name='Retailer Group')),
                ('Pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('Contact_person_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Person Name')),
                ('gstin', gst_field.modelfields.GSTField(max_length=15, verbose_name='GSTIN')),
                ('ZIN_NO', models.CharField(blank=True, max_length=50, null=True, verbose_name='ZIN No')),
                ('Customer_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Retailer Name')),
                ('Address', models.TextField(blank=True, max_length=150, null=True)),
                ('Contact_Number', phone_field.models.PhoneField(max_length=31, verbose_name='Contact Number')),
                ('Email_ID', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email ID')),
                ('pan', gst_field.modelfields.PANField(max_length=10, verbose_name='PAN NO')),
                ('Customer_For_Code', models.CharField(choices=[('200253', '200253'), ('200326', '200326'), ('200385', '200385'), ('200625', '200625'), ('201184', '201184'), ('201494', '201494'), ('265848', '265848'), ('266684', '266684'), ('264104', '264104'), ('264101', '264101')], max_length=10, verbose_name='Retailer For Code')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('City', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.citymaster')),
            ],
            options={
                'verbose_name': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bill_Date', models.DateField(verbose_name='Bill Date')),
                ('Invoice_No', models.CharField(max_length=100, verbose_name='Invoice No')),
                ('Total_Inventory_Amount', models.CharField(max_length=100, verbose_name='Total Inventory Amount')),
                ('Total_GST', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='Total GST')),
                ('SGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='SGST AMOUNT')),
                ('CGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='CGST AMOUNT')),
                ('IGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='IGST AMOUNT')),
                ('Cash_Discount_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='Cash Discount Amount')),
                ('R_O_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='R O AMOUNT')),
                ('Total_Amount', models.CharField(max_length=20, verbose_name='Total Amount')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer', verbose_name='Customer Code')),
            ],
            options={
                'verbose_name': 'Delivery Note',
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(max_length=100, unique=True)),
                ('Distributor_Code', models.CharField(max_length=25, unique=True)),
                ('Distributor_For_Code', models.CharField(blank=True, max_length=30, null=True)),
                ('Region', models.CharField(blank=True, max_length=50, null=True)),
                ('Address', models.TextField(blank=True, max_length=150, null=True)),
                ('PinCode', models.IntegerField(blank=True, null=True)),
                ('Contact_Person_Name', models.CharField(blank=True, max_length=100, null=True)),
                ('Contact_Number', phone_field.models.PhoneField(max_length=31)),
                ('Email_ID', models.EmailField(blank=True, max_length=100, null=True)),
                ('gstin', gst_field.modelfields.GSTField(max_length=15)),
                ('DL_NO', models.CharField(blank=True, max_length=100, null=True)),
                ('DL_NO_Valid_UPTO', models.DateField(blank=True, null=True)),
                ('pan', gst_field.modelfields.PANField(max_length=10)),
                ('TM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('RIS_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('PS_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('PSM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('ASM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('RSM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('BM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('SH_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('BDM_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('HO_Email', models.EmailField(blank=True, max_length=200, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('City', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.citymaster')),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('EID', models.AutoField(primary_key=True, serialize=False)),
                ('Code', models.CharField(blank=True, max_length=100, null=True)),
                ('Name', models.CharField(blank=True, max_length=50, null=True)),
                ('isAuth', models.BooleanField(blank=True, null=True)),
                ('Account_Type', models.CharField(blank=True, max_length=20, null=True)),
                ('MinChar', models.PositiveIntegerField(blank=True, null=True, verbose_name='*Minimum Character [?]:')),
                ('MaxChar', models.PositiveIntegerField(blank=True, null=True, verbose_name='*Maximum Character [?]:')),
                ('PassType', models.CharField(blank=True, choices=[(1, 'ANY CHARACTER'), (2, 'ALPHA NUMERIC'), (3, 'ALPHA NUMERIC WITH CAPS LETTER'), (4, 'ALPHA NUMERIC WITH SPECIAL CHARACTER')], max_length=50, null=True, verbose_name='*Password Type [?]:')),
                ('Passexpdays', models.PositiveIntegerField(blank=True, null=True, verbose_name='*Password Expiry Days [?]:')),
                ('PassexpMsgDays', models.PositiveIntegerField(blank=True, null=True, verbose_name='Password Expiry Message Days [?]:')),
                ('Autounlockhour', models.PositiveIntegerField(blank=True, null=True, verbose_name='*Auto Unlock Hours [?]:')),
                ('minPassAttempt', models.PositiveIntegerField(blank=True, null=True, verbose_name='*Min Password Attempt [?]:')),
                ('LoginField', models.CharField(blank=True, max_length=50, null=True)),
                ('Email_ID', models.BooleanField(blank=True, null=True, verbose_name='Email ID')),
                ('others', models.CharField(blank=True, choices=[(1, 'User ID'), (2, 'Distributor Name'), (3, 'Distributor Code')], max_length=50, null=True)),
                ('UserID', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExcelFileUploaded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excel_file_upload', models.FileField(upload_to='excel')),
            ],
        ),
        migrations.CreateModel(
            name='FieldMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DocType', models.CharField(max_length=50)),
                ('Field_Name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Hierarchy1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Hierarchy1',
            },
        ),
        migrations.CreateModel(
            name='Hierarchy2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('hierarchy1', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy1')),
            ],
            options={
                'verbose_name': 'Hierarchy2',
            },
        ),
        migrations.CreateModel(
            name='Hierarchy3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('hierarchy1', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy1')),
                ('hierarchy2', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy2')),
            ],
            options={
                'verbose_name': 'Hierarchy3',
            },
        ),
        migrations.CreateModel(
            name='Hierarchy4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('hierarchy1', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy1')),
                ('hierarchy2', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy2')),
                ('hierarchy3', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy3')),
            ],
            options={
                'verbose_name': 'Hierarchy4',
            },
        ),
        migrations.CreateModel(
            name='Hierarchy5',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=20)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('hierarchy1', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy1')),
                ('hierarchy2', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy2')),
                ('hierarchy3', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy3')),
                ('hierarchy4', models.ForeignKey(max_length=20, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy4')),
            ],
            options={
                'verbose_name': 'Hierarchy5',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_Name', models.CharField(max_length=100)),
                ('Item_Code', models.CharField(max_length=30, unique=True)),
                ('Batch_Enabled', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20, null=True)),
                ('UOM', models.CharField(max_length=30)),
                ('Principal_Company', models.CharField(max_length=100)),
                ('MRP', models.PositiveBigIntegerField(blank=True, null=True)),
                ('HSN_Code', models.CharField(blank=True, max_length=5, null=True)),
                ('GST_Rate', models.FloatField(blank=True, null=True)),
                ('GST_Applicable_From', models.DateField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Hierarchy1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy1')),
                ('Hierarchy2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy2')),
                ('Hierarchy3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy3')),
                ('Hierarchy4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy4')),
                ('Hierarchy5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.hierarchy5')),
            ],
        ),
        migrations.CreateModel(
            name='Opening_Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Date', models.DateTimeField()),
                ('Total_Amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Distributor_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor')),
            ],
            options={
                'verbose_name': 'Opening Balance',
            },
        ),
        migrations.CreateModel(
            name='Opening_Balance_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Item_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Quantity', models.PositiveIntegerField()),
                ('Rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Serial_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Batch', models.CharField(blank=True, max_length=50, null=True)),
                ('Discount', models.PositiveIntegerField(null=True, verbose_name='Sales Discount(%)')),
                ('Total_Amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Item_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item')),
                ('Opening_stock_Details', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Distributor Name')),
                ('Bill_Date', models.DateField(verbose_name='Bill Date')),
                ('Supplier_Invoice_No', models.CharField(max_length=50, verbose_name='Supplier Invoice No')),
                ('SAP_Order_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='SAP Order No')),
                ('SAP_Order_Date', models.DateField(verbose_name='SAP Order Date')),
                ('Total_Inventory_Amount', models.FloatField(null=True, verbose_name='Total Inventory Amount')),
                ('Total_GST', models.FloatField(null=True, verbose_name='Total GST(%)')),
                ('SGST_AMOUNT', models.FloatField(blank=True, default=0, null=True, verbose_name='SGST AMOUNT')),
                ('CGST_AMOUNT', models.FloatField(blank=True, default=0, null=True, verbose_name='CGST AMOUNT')),
                ('IGST_AMOUNT', models.FloatField(blank=True, default=0, null=True, verbose_name='IGST AMOUNT')),
                ('Vendor_Name', models.CharField(choices=[('Johnson and Johnson Surgical Vision India Pvt. Ltd.', 'Johnson and Johnson Surgical Vision India Pvt. Ltd.'), ('Johnson and Johnson .', 'Johnson and Johnson ')], max_length=100, verbose_name='Vendor Name')),
                ('PO_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='PO No')),
                ('Total_Invoice_Amount', models.DecimalField(decimal_places=2, max_digits=19, verbose_name='Total Invoice Amount')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Distributors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
            ],
            options={
                'verbose_name': 'Purchase Document',
            },
        ),
        migrations.CreateModel(
            name='PurchaseReturnDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bill_Date', models.DateField(verbose_name='Bill Date')),
                ('Supplier_Invoice_No', models.CharField(max_length=50, verbose_name='Supplier Invoice No')),
                ('SAP_Order_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='SAP Order No')),
                ('SAP_Order_Date', models.DateField(verbose_name='SAP Order Date')),
                ('Total_Inventory_Amount', models.FloatField(null=True, verbose_name='Total Inventory Amount')),
                ('Total_GST', models.FloatField(default=0, null=True, verbose_name='Total GST')),
                ('SGST_AMOUNT', models.FloatField(default=0, null=True, verbose_name='SGST AMOUNT')),
                ('CGST_AMOUNT', models.FloatField(default=0, null=True, verbose_name='CGST AMOUNT')),
                ('IGST_AMOUNT', models.FloatField(default=0, null=True, verbose_name='IGST AMOUNT')),
                ('Vendor_Name', models.CharField(choices=[('Johnson and Johnson Surgical Vision India Pvt. Ltd.', 'Johnson and Johnson Surgical Vision India Pvt. Ltd.'), ('Johnson and Johnson .', 'Johnson and Johnson ')], max_length=100, verbose_name='Vendor Name')),
                ('PO_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='PO No')),
                ('Total_Invoice_Amount', models.DecimalField(decimal_places=2, max_digits=19, verbose_name='Total Invoice Amount')),
                ('Distributors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
            ],
            options={
                'verbose_name': 'Purchase Return Document',
            },
        ),
        migrations.CreateModel(
            name='Receipt_Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Bill_Date', models.DateField(verbose_name='Bill Date')),
                ('Invoice_No', models.CharField(max_length=100, verbose_name='Invoice No')),
                ('Total_Inventory_Amount', models.CharField(max_length=100, verbose_name='Total Inventory Amount')),
                ('Total_GST', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='Total GST')),
                ('SGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='SGST AMOUNT')),
                ('CGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='CGST AMOUNT')),
                ('IGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='IGST AMOUNT')),
                ('Cash_Discount_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='Cash Discount Amount')),
                ('R_O_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True, verbose_name='R O AMOUNT')),
                ('Total_Amount', models.CharField(max_length=20, verbose_name='Total Amount')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer', verbose_name='Customer Code')),
                ('Distributors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
            ],
            options={
                'verbose_name': 'Receipt Note',
            },
        ),
        migrations.CreateModel(
            name='RegionMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Region_Name', models.CharField(max_length=50, verbose_name='Region Name')),
            ],
        ),
        migrations.CreateModel(
            name='RoleMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Role Name')),
                ('roletype', models.CharField(choices=[('SU', 'SU'), ('USER', 'USER')], max_length=100, verbose_name='Role Type')),
                ('description', models.CharField(max_length=50, verbose_name=' Role Description')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Role Master',
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Distributor Name')),
                ('Customer_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Customer Name')),
                ('Bill_Date', models.DateField()),
                ('Invoice_No', models.CharField(max_length=50)),
                ('Tally_MasterID', models.CharField(blank=True, max_length=15, null=True)),
                ('Total_Inventory_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('Total_GST', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('SGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('CGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('IGST_AMOUNT', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('Cash_Discount_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('R_O_Amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20, null=True)),
                ('Total_Invoice_Amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer', verbose_name='Customer Code')),
                ('Distributors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
            ],
        ),
        migrations.CreateModel(
            name='Sales_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.PositiveIntegerField(default=0)),
                ('Sales_Item_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Quantity', models.PositiveIntegerField()),
                ('Sales_Rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Sales_Serial_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Batch', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Discount', models.PositiveIntegerField(null=True, verbose_name='Sales Discount(%)')),
                ('Total_Amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('SalesDetails', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.sales')),
                ('Sales_Item_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item')),
            ],
            options={
                'verbose_name': 'Sales Detail',
            },
        ),
        migrations.CreateModel(
            name='Sales_Return_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Sales_Item_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Quantity', models.PositiveIntegerField()),
                ('Sales_Rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Sales_Serial_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Batch', models.CharField(blank=True, max_length=50, null=True)),
                ('Sales_Discount', models.PositiveIntegerField(null=True, verbose_name='Sales Discount(%)')),
                ('Total_Amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('InActive', 'InActive')], max_length=10)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Zone',
            },
        ),
        migrations.CreateModel(
            name='StockMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closingbalance', models.PositiveIntegerField()),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item')),
                ('openingbalance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance')),
                ('openingbalancechild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance_child')),
                ('purchasereturn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.purchasereturndocument')),
                ('purchases', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.purchasedocument')),
                ('sales', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.sales_detail')),
                ('salesreturn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.sales_return_detail')),
            ],
        ),
        migrations.CreateModel(
            name='Stock_Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Item_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Quantity', models.PositiveIntegerField()),
                ('Rate', models.DecimalField(decimal_places=2, max_digits=20)),
                ('Serial_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Batch', models.CharField(blank=True, max_length=50, null=True)),
                ('Discount', models.PositiveIntegerField(null=True, verbose_name='Sales Discount(%)')),
                ('Total_Amount', models.DecimalField(decimal_places=2, default=0, max_digits=20)),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Item_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item')),
                ('Stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Date', models.DateTimeField()),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Distributor_Code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor')),
                ('items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.item')),
            ],
            options={
                'verbose_name': 'Opening Balance',
            },
        ),
        migrations.CreateModel(
            name='StateMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('State_Name', models.CharField(max_length=50, verbose_name='State Name')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.regionmaster')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.zone')),
            ],
        ),
        migrations.CreateModel(
            name='SalesReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Distributor_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Customer_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Bill_Date', models.DateTimeField()),
                ('Invoice_No', models.CharField(max_length=20)),
                ('Tally_Master_ID', models.CharField(max_length=15)),
                ('Total_Inventory_Amount', models.FloatField(default=0, null=True)),
                ('Total_GST', models.FloatField(default=0, null=True)),
                ('SGST_AMOUNT', models.FloatField(default=0, null=True)),
                ('CGST_AMOUNT', models.FloatField(default=0, null=True)),
                ('IGST_AMOUNT', models.FloatField(default=0, null=True)),
                ('Cash_Discount_Amount', models.FloatField(default=0, null=True)),
                ('RO_Amount', models.FloatField(default=0, null=True)),
                ('Total_Invoice_Amount', models.CharField(max_length=20, null=True)),
                ('current_status', models.BooleanField(default=False, verbose_name='Current Status')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Customers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customer', verbose_name='Customer Code')),
                ('Details_Of_Sales_Return', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.sales_detail')),
                ('Distributors', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
            ],
            options={
                'verbose_name': 'Sales Return',
            },
        ),
        migrations.AddField(
            model_name='sales_return_detail',
            name='SalesDetails',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.salesreturn'),
        ),
        migrations.AddField(
            model_name='sales_return_detail',
            name='Sales_Item_Code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item'),
        ),
        migrations.AddField(
            model_name='regionmaster',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.zone'),
        ),
        migrations.CreateModel(
            name='Receipt_Note_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Item_Name', models.CharField(blank=True, max_length=50, null=True)),
                ('Quantity', models.PositiveIntegerField(verbose_name='Quantity*')),
                ('Rate', models.FloatField(verbose_name='Rate')),
                ('Serial_No', models.CharField(max_length=50, verbose_name='Serial No*')),
                ('Batch', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch')),
                ('Discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Discount')),
                ('Total_Amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='*Total Amount')),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reference No')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item', verbose_name='Item Code*')),
                ('receiptnotes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.receipt_note', verbose_name='Receipt Note')),
            ],
            options={
                'verbose_name': 'Receipt Note Detail',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forgot_password_token', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='opening_balance',
            name='Opening_Stock_Details',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.sales_detail'),
        ),
        migrations.AddField(
            model_name='opening_balance',
            name='items',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.item'),
        ),
        migrations.AddField(
            model_name='distributor',
            name='State',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.statemaster'),
        ),
        migrations.CreateModel(
            name='DetailsOfPurchaseReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Item_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Purchase Return Item Name')),
                ('Purchases_Return_Quantity', models.PositiveIntegerField(verbose_name='Purchase Return Quantity')),
                ('Purchase_Rate', models.FloatField(verbose_name='Purchase Rate')),
                ('Purchase_Product_Discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Purchase Product Discount(%)')),
                ('Purchases_Serial_No', models.CharField(max_length=50, verbose_name='Puchase Serial No')),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True)),
                ('Total_Amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total Amount')),
                ('Total_Amounts', models.CharField(blank=True, max_length=50, null=True, verbose_name='Total Amounts')),
                ('Details_Of_Purchase_Return', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.purchasereturndocument')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item', verbose_name='Item Code')),
            ],
            options={
                'verbose_name': 'Purchase Return Detail',
            },
        ),
        migrations.CreateModel(
            name='DetailOfPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=30, null=True)),
                ('item_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Item Name')),
                ('Purchases_Quantity', models.PositiveIntegerField(verbose_name='Purchase Quantity')),
                ('Purchase_Rate', models.FloatField(verbose_name='Purchase Rate')),
                ('Purchase_Product_Discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Purchase Discount(%)')),
                ('Purchases_Serial_No', models.CharField(max_length=50, verbose_name='Puchase Serial No')),
                ('Total_Amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total Amount')),
                ('Total_Amounts', models.CharField(blank=True, max_length=50, null=True, verbose_name='Total Amounts')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item', verbose_name='Item Code')),
                ('purchase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.purchasedocument')),
            ],
            options={
                'verbose_name': 'Purchase Document Detail',
            },
        ),
        migrations.CreateModel(
            name='Delivery_Note_Details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(null=True)),
                ('Item_Name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Item Name')),
                ('Quantity', models.PositiveIntegerField(verbose_name='Sales Quantity*')),
                ('Rate', models.FloatField(verbose_name='Sales Rate')),
                ('Serial_No', models.CharField(max_length=50, verbose_name='Sales Serial No*')),
                ('Batch', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sales Batch')),
                ('Discount', models.FloatField(blank=True, default=0, null=True, verbose_name='Sales Discount')),
                ('Amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='*Total Amount')),
                ('Reference_No', models.CharField(blank=True, max_length=50, null=True, verbose_name='Reference No')),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('Deliverynotes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.delivery_note')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item', verbose_name='Sales Item Code*')),
            ],
            options={
                'verbose_name': 'Delivery Note Detail',
            },
        ),
        migrations.AddField(
            model_name='delivery_note',
            name='Distributors',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code'),
        ),
        migrations.CreateModel(
            name='DBPriceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.BooleanField(default=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.distributor', verbose_name='Distributor Code')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item', verbose_name='Item Code')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='Distributor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.distributor'),
        ),
        migrations.AddField(
            model_name='customer',
            name='Region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.regionmaster'),
        ),
        migrations.AddField(
            model_name='customer',
            name='State',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.statemaster'),
        ),
        migrations.AddField(
            model_name='customer',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='account.zone'),
        ),
        migrations.CreateModel(
            name='ClosingBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('closingbalance', models.PositiveIntegerField()),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.item')),
                ('openingbalance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance')),
                ('openingbalancechild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.opening_balance_child')),
                ('purchasedetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.detailofpurchase')),
                ('purchasereturn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.purchasereturndocument')),
                ('purchasereturndetail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.detailsofpurchasereturn')),
                ('purchases', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.purchasedocument')),
                ('sales', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.sales_detail')),
                ('salesreturn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.sales_return_detail')),
            ],
        ),
        migrations.AddField(
            model_name='citymaster',
            name='State',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.statemaster'),
        ),
        migrations.AddField(
            model_name='citymaster',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.regionmaster'),
        ),
        migrations.AddField(
            model_name='citymaster',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.zone'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.rolemaster'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
